application.title=Car rental
application.version=HEAD-SNAPSHOT
spring.output.ansi.enabled=ALWAYS
spring.mvc.pathmatch.matching-strategy=ANT_PATH_MATCHER

# SERVER CONFIGURATION
server.port=${SERVER_PORT:8080}
server.ssl.enabled=${SSL_ENABLED:false}
server.ssl.key-password=qwerty
server.ssl.key-store-password=qwerty
server.ssl.key-store=classpath:keystore.jks
server.servlet.context-path=${SERVER_CONTEXT:}

# CORS CONFIGURATION
cors.allowedOrigins=${FRONTEND_APP_PROTOCOL:http}://${FRONTEND_APP_HOSTNAME:localhost}:${FRONTEND_APP_PORT:3030}
cors.allowedMethods=HEAD, GET, POST, PUT, DELETE, PATCH
cors.allowedHeaders=Authorization, Cache-Control, Content-Type, credentials, X-XSRF-TOKEN
cors.allowCredentials=true

# DATABASE CONFIGURATION
spring.datasource.url=jdbc:h2:mem:car-rental;MODE=LEGACY
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect

#spring.datasource.url=jdbc:postgresql://localhost:5432/carrental
#spring.datasource.driverClassName=org.postgresql.Driver
#spring.datasource.username=postgres
#spring.datasource.password=postgres
#spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect

#spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
spring.jpa.defer-datasource-initialization=true
#spring.jpa.hibernate.ddl-auto=create-drop
#spring.sql.init.mode=always
spring.sql.init.encoding=utf-8
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console
spring.h2.console.settings.trace=false
spring.h2.console.settings.web-allow-others=false
spring.jpa.properties.hibernate.show_sql=true
spring.jpa.properties.hibernate.use_sql_comments=true
spring.jpa.properties.hibernate.format_sql=true
logging.level.org.hibernate.type=trace
spring.jpa.properties.hibernate.type=trace

# JWT CONFIGURATION
jwt.secret=secret123456
jwt.expirationInSeconds=1800
jwt.cookieName=token
jwt.cookiePath=${JWT_COOKIE_PATH:/}

# MAIL CONFIGURATION
mail.demoRecipientAddress=greenmail@localhost
mail.demoRecipientLogin=greenmail
mail.demoRecipientPassword=qwerty4321
mail.host=localhost
mail.port=3025
mail.username=greenmail
mail.password=qwerty4321

# MQTT CONFIGURATION
spring.rabbitmq.host=${RABBIT_HOST:localhost}
spring.rabbitmq.username=${RABBIT_USERNAME:guest}
spring.rabbitmq.password=${RABBIT_PASSWORD:guest}
spring.rabbitmq.port=${RABBIT_PORT:5672}
spring.rabbitmq.listener.simple.default-requeue-rejected=false
spring.rabbitmq.listener.simple.retry.enabled=false
#spring.rabbitmq.listener.simple.retry.enabled=true
#spring.rabbitmq.listener.simple.retry.initial-interval=5s
#spring.rabbitmq.listener.simple.retry.max-attempts=3
#spring.rabbitmq.listener.simple.retry.max-interval=10s
#spring.rabbitmq.listener.simple.retry.multiplier=2

car-rental.rabbitmq.exchange=x.car-rental
car-rental.rabbitmq.dlxExchange=x.car-rental.dlx
car-rental.rabbitmq.dlqDefaultQueue=q.car-rental.dlq
car-rental.vehicle-service.queue.getVehicleById=q.car-rental.vehicle-service.get-vehicle-by-id
car-rental.vehicle-service.getBookedVehiclesIdsQueue=${car-rental.booking-service.queue.getBookedVehiclesIdsQueue}
car-rental.vehicle-service.getLocationByIdQueue=${car-rental.booking-service.queue.getLocationByIdQueue}
car-rental.vehicle-service.getLocationQueue=${car-rental.booking-service.queue.getLocationQueue}
car-rental.vehicle-service.getAverageVehiclesRatingQueue=${car-rental.rating-service.queue.getAverageVehiclesRatingQueue}
car-rental.vehicle-service.uploadVehicleImageQueue=${car-rental.storage-service-stub.queue.getUploadVehicleImageQueue}
car-rental.booking-service.queue.getBookedVehiclesIdsQueue=q.car-rental.booking-service.get-booked-vehicles-ids-queue
car-rental.booking-service.queue.getLocationByIdQueue=q.car-rental.booking-service.get-location-by-id-queue
car-rental.booking-service.queue.getLocationQueue=q.car-rental.booking-service.get-location-queue
car-rental.booking-service.getVehicleByIdQueue=${car-rental.vehicle-service.queue.getVehicleById}
car-rental.rating-service.queue.getAverageVehiclesRatingQueue=q.car-rental.rating-service.get-average-vehicles-rating-queue
car-rental.user-service.queue.getUserByEmailQueue=q.car-rental.user-service.get-user-by-email-queue
car-rental.user-service.generateTokenQueue=${car-rental.auth-service.queue.generateTokenQueue}
car-rental.user-service.getTokenQueue=${car-rental.auth-service.queue.getTokenQueue}
car-rental.user-service.deleteTokenQueue=${car-rental.auth-service.queue.deleteTokenQueue}
car-rental.user-service.sendEmailQueue=${car-rental.mail-service.queue.sendEmailQueue}
car-rental.user-service.sendMultipleEmailsQueue=${car-rental.mail-service.queue.sendMultipleEmailsQueue}
car-rental.auth-service.queue.generateTokenQueue=q.car-rental.auth-service.generate-token-queue
car-rental.auth-service.queue.getTokenQueue=q.car-rental.auth-service.get-token-queue
car-rental.auth-service.queue.deleteTokenQueue=q.car-rental.auth-service.delete-token-queue
car-rental.auth-service.getUserByEmailQueue=${car-rental.user-service.queue.getUserByEmailQueue}
car-rental.mail-service.queue.sendEmailQueue=q.car-rental.mail-service.send-email-queue
car-rental.mail-service.queue.sendMultipleEmailsQueue=q.car-rental.mail-service.send-multiple-emails-queue
car-rental.storage-service-stub.queue.getUploadVehicleImageQueue=q.car-rental.storage-service-stub.upload-vehicle-image-queue
car-rental.booking-service.booking-scheduler.cancelExpiredBookingEnabled=true
car-rental.booking-service.booking-scheduler.cancelExpiredBookingCron=0 0 0 * * *

# EUREKA CONFIGURATION
eureka.client.enabled=${EUREKA_ENABLED:false}

# LOGGING CONFIGURATION
logging.level.org.apache=DEBUG

# APPLICATION CONFIGURATION
car-rental.user-service.login-page-url=${FRONTEND_APP_PROTOCOL:http}://${FRONTEND_APP_HOSTNAME:localhost}:${FRONTEND_APP_PORT:3030}${FRONTEND_APP_CONTEXT:}/login
car-rental.user-service.registration-confirm-mail-url=${FRONTEND_APP_PROTOCOL:http}://${FRONTEND_APP_HOSTNAME:localhost}:${FRONTEND_APP_PORT:3030}${FRONTEND_APP_CONTEXT:}/registration/confirm-mail
car-rental.user-service.registration-invalid-token-url=${FRONTEND_APP_PROTOCOL:http}://${FRONTEND_APP_HOSTNAME:localhost}:${FRONTEND_APP_PORT:3030}${FRONTEND_APP_CONTEXT:}/registration/invalid-token
car-rental.user-service.registration-expired-token-url=${FRONTEND_APP_PROTOCOL:http}://${FRONTEND_APP_HOSTNAME:localhost}:${FRONTEND_APP_PORT:3030}${FRONTEND_APP_CONTEXT:}/registration/expired-token?token=
car-rental.user-service.reset-password-invalid-token-url=${FRONTEND_APP_PROTOCOL:http}://${FRONTEND_APP_HOSTNAME:localhost}:${FRONTEND_APP_PORT:3030}${FRONTEND_APP_CONTEXT:}/reset-password/invalid-token
car-rental.user-service.reset-password-update-token-url=${FRONTEND_APP_PROTOCOL:http}://${FRONTEND_APP_HOSTNAME:localhost}:${FRONTEND_APP_PORT:3030}${FRONTEND_APP_CONTEXT:}/reset-password/update?token=
car-rental.user-service.registration-confirm-url=${USER_SERVICE_PROTOCOL:http}://${USER_SERVICE_HOSTNAME:localhost}:${USER_SERVICE_PORT:8080}${USER_SERVICE_CONTEXT:}/registration/registration-confirm?token=
car-rental.user-service.reset-password-change-password-url=${USER_SERVICE_PROTOCOL:http}://${USER_SERVICE_HOSTNAME:localhost}:${USER_SERVICE_PORT:8080}${USER_SERVICE_CONTEXT:}/reset-password/change-password?token=
