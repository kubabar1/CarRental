spring.application.name=auth-service

server.port=8081

spring.datasource.url=${DATASOURCE_URL:jdbc:h2:mem:auth-service;MODE=LEGACY}
spring.datasource.driverClassName=${DATASOURCE_DRIVER_CLASS_NAME:org.h2.Driver}
spring.datasource.username=${DATASOURCE_USERNAME:sa}
spring.datasource.password=${DATASOURCE_PASSWORD:}
spring.jpa.database-platform=${DATASOURCE_DIALECT:org.hibernate.dialect.H2Dialect}
#spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
spring.jpa.defer-datasource-initialization=true
#spring.jpa.hibernate.ddl-auto=create-drop
#spring.sql.init.mode=always
#spring.h2.console.enabled=true
#spring.h2.console.path=/h2-console
#spring.h2.console.settings.trace=false
#spring.h2.console.settings.web-allow-others=false
spring.mvc.pathmatch.matching-strategy = ANT_PATH_MATCHER
spring.output.ansi.enabled=ALWAYS
application.title=Auth Service
application.version=HEAD-SNAPSHOT
jwt.secret=secret123456
jwt.expirationInSeconds=600
jwt.cookieName=token
cors.allowedOrigins=${FRONTEND_APP_PROTOCOL:http}://${FRONTEND_APP_HOSTNAME:localhost}:${FRONTEND_APP_PORT:3030}
cors.allowedMethods=HEAD, GET, POST, PUT, DELETE, PATCH
cors.allowedHeaders=Authorization, Cache-Control, Content-Type, credentials, X-XSRF-TOKEN
cors.allowCredentials=true

spring.rabbitmq.host=${RABBIT_HOST:localhost}
spring.rabbitmq.username=guest
spring.rabbitmq.password=guest
spring.rabbitmq.port=5672

#spring.sql.init.data-locations=classpath:schema-h2.sql
spring.sql.init.platform=${SQL_PLATFORM:h2}

eureka.client.enabled=${EUREKA_ENABLED:false}
eureka.client.serviceUrl.defaultZone=${EUREKA_URI:http://localhost:8761/eureka}

car-rental.rabbitmq.exchange=x.car-rental
car-rental.rabbitmq.dlxExchange=x.car-rental.dlx

car-rental.rabbitmq.dlqDefaultQueue=q.car-rental.dlq

car-rental.auth-service.queue.generateTokenQueue=q.car-rental.auth-service.generate-token-queue
car-rental.auth-service.queue.getTokenQueue=q.car-rental.auth-service.get-token-queue
car-rental.auth-service.queue.deleteTokenQueue=q.car-rental.auth-service.delete-token-queue
car-rental.auth-service.getUserByEmailQueue=q.car-rental.user-service.get-user-by-email-queue